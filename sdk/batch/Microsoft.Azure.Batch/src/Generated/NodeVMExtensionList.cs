// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

//
// This file was autogenerated by a tool.
// Do not modify it.
//

namespace Microsoft.Azure.Batch
{
    using Models = Microsoft.Azure.Batch.Protocol.Models;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The result of listing the Compute Node extensions in a Node.
    /// </summary>
    public partial class NodeVMExtensionList : ITransportObjectProvider<Models.NodeVMExtensionList>, IPropertyMetadata
    {
        private class PropertyContainer : PropertyCollection
        {
            public readonly PropertyAccessor<string> NextPageLinkProperty;
            public readonly PropertyAccessor<IList<NodeVMExtension>> NodeVMExtensionListProperty;

            public PropertyContainer() : base(BindingState.Unbound)
            {
                this.NextPageLinkProperty = this.CreatePropertyAccessor<string>(nameof(NextPageLink), BindingAccess.Read | BindingAccess.Write);
                this.NodeVMExtensionListProperty = this.CreatePropertyAccessor<IList<NodeVMExtension>>(nameof(NodeVMExtensionList), BindingAccess.Read | BindingAccess.Write);
            }

            public PropertyContainer(Models.NodeVMExtensionList protocolObject) : base(BindingState.Bound)
            {
                this.NextPageLinkProperty = this.CreatePropertyAccessor(
                    protocolObject.odata.nextLink,
                    nameof(NextPageLink),
                    BindingAccess.Read);
                this.NodeVMExtensionListProperty = this.CreatePropertyAccessor(
                    NodeVMExtension.ConvertFromProtocolCollectionAndFreeze(protocolObject.NodeVMExtensionList),
                    nameof(NodeVMExtensionList),
                    BindingAccess.Read);
            }
        }

        private readonly PropertyContainer propertyContainer;

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="NodeVMExtensionList"/> class.
        /// </summary>
        public NodeVMExtensionList()
        {
            this.propertyContainer = new PropertyContainer();
        }

        internal NodeVMExtensionList(Models.NodeVMExtensionList protocolObject)
        {
            this.propertyContainer = new PropertyContainer(protocolObject);
        }

        #endregion Constructors

        #region NodeVMExtensionList

        /// <summary>
        /// Gets the URL to get the next set of results.
        /// </summary>
        public string NextPageLink
        {
            get { return this.propertyContainer.NextPageLinkProperty.Value; }
            private set { this.propertyContainer.NextPageLinkProperty.Value = value; }
        }

        /// <summary>
        /// Gets or sets the list of Compute Node extensions.
        /// </summary>
        public IList<NodeVMExtension> NodeVMExtensionList
        {
            get { return this.propertyContainer.NodeVMExtensionListProperty.Value; }
            set
            {
                this.propertyContainer.NodeVMExtensionListProperty.Value = ConcurrentChangeTrackedModifiableList<NodeVMExtension>.TransformEnumerableToConcurrentModifiableList(value);
            }
        }

        #endregion // NodeVMExtensionList

        #region IPropertyMetadata

        bool IModifiable.HasBeenModified
        {
            get { return this.propertyContainer.HasBeenModified; }
        }

        bool IReadOnly.IsReadOnly
        {
            get { return this.propertyContainer.IsReadOnly; }
            set { this.propertyContainer.IsReadOnly = value; }
        }

        #endregion //IPropertyMetadata

        #region Internal/private methods
        /// <summary>
        /// Return a protocol object of the requested type.
        /// </summary>
        /// <returns>The protocol object of the requested type.</returns>
        Models.NodeVMExtensionList ITransportObjectProvider<Models.NodeVMExtensionList>.GetTransportObject()
        {
            Models.NodeVMExtensionList result = new Models.NodeVMExtensionList()
            {
                odata.nextLink = this.NextPageLink,
                NodeVMExtensionList = UtilitiesInternal.ConvertToProtocolCollection(this.NodeVMExtensionList),
            };

            return result;
        }


        #endregion // Internal/private methods
    }
}